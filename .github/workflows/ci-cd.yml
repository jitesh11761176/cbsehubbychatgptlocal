name: CI/CD

on:
  push:
    branches: [ main ]

jobs:
  backend-deploy:
    name: Deploy API to Cloud Run
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ secrets.GCP_PROJECT }}

      - name: Build and Push Docker Image
        run: |
          gcloud builds submit --tag gcr.io/${{ secrets.GCP_PROJECT }}/cbsehub-api ./api

      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy cbsehub-api \
            --image gcr.io/${{ secrets.GCP_PROJECT }}/cbsehub-api \
            --region us-central1 \
            --platform managed \
            --allow-unauthenticated \
            --set-env-vars DATABASE_URL=${{ secrets.DATABASE_URL }},GCS_BUCKET=${{ secrets.GCS_BUCKET }},GEMINI_API_KEY=${{ secrets.GEMINI_API_KEY }},JWT_SECRET=${{ secrets.JWT_SECRET }}

  frontend-deploy:
    name: Deploy Web to Vercel
    runs-on: ubuntu-latest
    needs: backend-deploy

    steps:
      - uses: actions/checkout@v3

      - name: Deploy to Vercel
        run: |
          npm i -g vercel
          vercel pull --yes --token=${{ secrets.VERCEL_TOKEN }}
          vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}
          vercel deploy --prebuilt --prod \
            --token=${{ secrets.VERCEL_TOKEN }} \
            --org-id=${{ secrets.VERCEL_ORG_ID }} \
            --project-id=${{ secrets.VERCEL_PROJECT_ID }}
